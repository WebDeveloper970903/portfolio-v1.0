

/**  Buttons
*****************************************************/
.btn,
.btn-medium {
  transition: transform 0.5s linear;

  .fontawesome-icon {
    color: darken($color-primary-white, 50%);
    margin-left: 0.5rem;
    transition-duration: 250ms;
  }
  &:link,
  &:visited {
    vertical-align: middle;
    text-decoration: none;
    padding: 1.65rem 2.9rem;
    display: inline-block;
    border-radius: 3rem;
    position: relative;
    text-transform: uppercase;
    // adding mixin
    @include textSpace-textSsize;
    font-weight: 700;

    // media queries
    @include respond(phone) {
      padding: 1.75rem 3rem;
    }
  }
  &:hover {
    cursor: pointer;
    transition: transform 0.5s linear;
  }
}

.btn--black {
  background-color: $color-primary-grey-dark;
  color: $color-primary-grey;
  // add mixin
  &:hover {
    @include arrow-right-animate($color-primary-grey);
  }
}

.btn--white {
  background-color: $color-primary-white;
  color: $color-primary-grey-dark;
  border: 0.1rem solid rgba($color-primary-grey-dark, 0.15);
  &:hover {
    @include arrow-right-animate($color-primary-grey-dark);
  }
}

.btn--text {
  color: $color-primary-grey;
  background-color: $color-primary-grey-dark;
  // add mixin
  &:hover {
    @include arrow-right-animate($color-primary-grey);
  }
}

.btn--scroll-down {
  background: $color-primary-gold;
  bottom: 4.5rem;
  z-index: 2;

  .fontawesome-icon {
    color: darken($color-primary-grey, 0.25%); // overides darken($color-primary-white, 50%);
    vertical-align: middle;
    margin: 0 auto; // center icon horizontally - overides margin-left: 0.5rem; 
    margin-top: 2.5rem; // center icon vertically
    padding-left: .2rem;
  }
  &:link,
  &:visited {
    border-radius: unset; // overides border-radius: 3rem;
    padding: 0; // overides padding: 1.65rem 2.9rem;
    width: 8.5rem;
    height: 8.5rem;
  }
  &:hover {
    cursor: pointer;
    // add animation for the icon
    @include arrow-down-animate(lighten($color-primary-grey, 100%));
  }
}

.btn--scroll-up {
  .fontawesome-icon {
    color: darken($color-primary-grey, 25%);
  }
  &:hover {
    @include arrow-up-animate(darken($color-primary-white, 10%));
  }
}

.section-about .row .profile a.btn-medium {
  padding: 2rem 4rem;
}

.featured {
  padding: unset;
  display: inline-block;
  border: 2px dashed lighten($color: green, $amount: 0%);
  border-radius: 0.3rem 0 0 0.3rem;
  transition: transform 0.3s;

  .fontawesome-icon {
    color: darken($color-primary-white, 50%);
  }
  .highlight-text {
    color: darken($color-primary-white, 50%);
    font-size: 1.5;
  }
  &:hover {
    cursor: pointer;
    transform: translateY(-1.5rem) scale(1.03rem);
    // add mixin - "featured.scss" and "animations.scss" for inherited properties
    @include arrow-up-animate($color-primary-grey-dark);
  }
}

.btn--wave {
  transition: transform 0s linear;
  // when we over the btn--wave, apply the following styles for the after pseudo-elem
  &:hover::after {
    // border: 1px solid red;
    // make the pseudo-element grow and fade out
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
  }
}
.btn--wave:link,
.btn--wave:visited {
  transition: all 0.2s;
  // reference for the pseudo-elem position
  position: relative;
}
.btn--wave:hover {
  transform: translateY(-3px); // when we over, moves up 3px
  transition: transform 0s linear;
  box-shadow: 0 1rem 2rem rgba($color-primary-grey-dark, 0.2); // shadow: [X Y Blur Colour]
}
.btn--wave:active {
  transform: translateY(-1px); //when we click, goes down a litle (from -3px to -1px)
  box-shadow: 0 0.5rem 1rem rgba($color-primary-grey-dark, 0.2); // less shadow when user clicks the btn helps to create proximity effect (away)
}
// create a pseudo-elem that looks like the existing elem and place it behind the existing elem
.btn--wave::after {
  background-color: $color-primary-white;
  content: ""; // always required
  display: inline-block; // same as existing btn
  // a pseudo-elem acts like a child of an existing elem
  width: 100%;
  height: 100%;
  border-radius: 3rem;
  // place pseudo-elem behind the its original
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  // transition to initial state
  transition: all 0.4s;
}
